#version 450

const float weight[5] = float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(binding = 0) uniform sampler2D inputTexture;
layout(binding = 1, rgba16f) uniform writeonly image2D outputTexture;

layout(push_constant) uniform pushConstants
{
    vec2 u_outputTextureSize;
    vec2 u_inputInvTextureSize;
} myPerMip;

void main()
{
    if (gl_GlobalInvocationID.x >= myPerMip.u_outputTextureSize.x || gl_GlobalInvocationID.y >= myPerMip.u_outputTextureSize.y)
        return;

    ivec2 pixel_coord = ivec2(gl_GlobalInvocationID.xy);
    vec2 texcoord = myPerMip.u_inputInvTextureSize.xy * (gl_GlobalInvocationID.xy + vec2(0.5));

	vec3 value = texture(inputTexture, texcoord).rgb * weight[0];

	for(int i = 1; i < 5; ++i){
		value += texture(inputTexture, texcoord + vec2(0.0, myPerMip.u_inputInvTextureSize.y * i)).rgb * weight[i];
		value += texture(inputTexture, texcoord - vec2(0.0, myPerMip.u_inputInvTextureSize.y * i)).rgb * weight[i];
	}

    imageStore(outputTexture, pixel_coord, vec4(value, 1.0));
}